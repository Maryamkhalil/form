//// -- LEVEL 1
//// -- Tables and References

// Creating tables
Table Customer as U {
  id int [pk, increment] // auto-increment
  full_name varchar
  no_of_level timestamp
  node_name int
}

Table costimize_defination {
  code int [pk]
  name varchar
  continent_name varchar
 }

// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one

//----------------------------------------------//

//// -- LEVEL 2
//// -- Adding column settings

Table order_items {
  order_id int [ref: > orders.id] // inline relationship (many-to-one)
  product_id int
  quantity int [default: 1] // default value
}



Table orders {
  id int [pk] // primary key
  user_id int [not null, unique]
  status varchar
  Prority varchar
  Leader varchar
  
  created_at varchar [note: 'When order created'] // add column note
}

//----------------------------------------------//

//// -- Level 3 
//// -- Enum, Indexes

// Enum for 'products' table below
Enum products_status {
  out_of_stock
  in_stock
  running_low [note: 'less than 20'] // add column note
}

// Indexes: You can define a single or multi-column index 
Table Admin {
  id int [pk]
  name varchar
  merchant_id int [not null]
  price int
  status products_status
  created_at datetime [default: `now()`]
  
  Indexes {
    (merchant_id, status) [name:'product_status']
    id [unique]
  }
}

Table Login {
  id int
  country_code int
  merchant_name varchar
  
  "created at" varchar
  admin_id int [ref: > U.id]
  Indexes {
    (id, country_code) [pk]
  }
}

Table type_Event {
  id int [pk]
  onetoone_meeting int
 standup_meeting int
  Executive_catchup datetime
  meeting int
  }




Ref: "Admin"."name" < "Login"."merchant_name"

Ref: "Login"."merchant_name" < "type_Event"."standup_meeting"

Ref: "costimize_defination"."name" - "orders"."user_id"